# based on https://github.com/openfaas/store-functions/blob/master/.github/workflows/build.yaml

name: build

on:
  schedule:
    # Cronjob, once a month (if repo have activity)
    - cron: "0 4 1 * *" # Runs at 04:00 UTC on the 1st of every month.

  # push:
  #   branches:
  #     - "*"

  # pull_request:
  #   branches:
  #     - "*"

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      faascli_publish_filter:
        description: 'Filter packages to rebuild'
        required: true
        type: string
        default: '*'

jobs:
  build:
    permissions:
      packages: write
      checks: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Get faas-cli
        run: curl -sLSf https://cli.openfaas.com | sudo sh

      # - # Add support for more platforms with QEMU (optional)
      #   # https://github.com/docker/setup-qemu-action
      #   name: Set up QEMU
      #   uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Get TAG
        id: get_tag
        run: echo ::set-output name=TAG::latest-dev

      - name: Get Repo Owner
        id: get_repo_owner
        run: >
          echo ::set-output name=repo_owner::$(echo ${{ github.repository_owner }} |
          tr '[:upper:]' '[:lower:]')

      - name: Docker Login
        run: >
          echo ${{ secrets.GITHUB_TOKEN }} | 
          docker login ghcr.io --username 
          ${{ steps.get_repo_owner.outputs.repo_owner }} 
          --password-stdin

      # # @see https://github.com/openfaas/python-flask-template
      # - name: Fech additional templates (python-flask-template)
      #   run: >
      #     faas-cli template pull https://github.com/openfaas/python-flask-template

      # - name: faas-cli template pull
      #   run: >
      #     faas-cli template pull

      - name: faas-cli template store pull python3-http
        run: >
          faas-cli template store pull python3-http

      - name: faas-cli template store pull dockerfile
        run: >
          faas-cli template store pull dockerfile

      # - name: Publish functions
      #   run: >
      #     OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
      #     TAG="latest"
      #     faas-cli publish
      #     --extra-tag ${{ github.sha }}
      #     --platforms linux/arm/v7,linux/arm64,linux/amd64
      #   continue-on-error: true

      # # @TODO text this next
      # - name: Publish functions
      #   run: >
      #     OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
      #     TAG="latest"
      #     faas-cli publish
      #     --extra-tag "${{ github.sha }}"
      #     --platforms linux/amd64
      #     --filter "api-*"
      #   continue-on-error: true

      # # @TODO text this next
      # - name: Publish functions
      #   run: >
      #     OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
      #     TAG="latest"
      #     faas-cli publish
      #     --platforms linux/amd64
      #     --filter "api-*"
      #   continue-on-error: true

      # - name: Publish functions
      #   run: >
      #     OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
      #     TAG="latest"
      #     faas-cli publish
      #     --platforms linux/amd64
      #   continue-on-error: true

      - name: Publish functions
        run: >
          OWNER="${{ steps.get_repo_owner.outputs.repo_owner }}"
          TAG="latest"
          faas-cli publish
          --filter "${{ inputs.faascli_publish_filter }}"
          --platforms linux/amd64
        # continue-on-error: true
